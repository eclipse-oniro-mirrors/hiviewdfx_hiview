# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/hiview/hiview.gni")
import("//build/ohos.gni")

config("hiview_service_ability_config") {
  visibility = [ "*:*" ]

  include_dirs = [
    "include",
    "$hiview_service",
    "$hiview_base/utility/include",
  ]
}

ohos_source_set("hiview_service_impl") {
  public_configs = [ ":hiview_service_ability_config" ]

  include_dirs = [
    "$hiview_base/include",
    "$hiview_service",
    "include",
    "$hiview_interfaces/inner_api/unified_collection",
  ]

  sources = [
    "src/hiview_file_info.cpp",
    "src/hiview_log_config_manager.cpp",
    "src/hiview_service_ability.cpp",
    "src/hiview_service_ability_stub.cpp",
  ]

  deps = [
    "$hiview_base:hiviewbase",
    "//third_party/jsoncpp:jsoncpp",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  part_name = "hiview"

  subsystem_name = "hiviewdfx"
}

ohos_source_set("hiview_service_impl_for_unified_collection") {
  public_configs = [ ":hiview_service_ability_config" ]

  include_dirs = [
    "$hiview_base/include",
    "include",
    "$hiview_interfaces/inner_api/unified_collection",
  ]

  sources = [
    "src/hiview_file_info.cpp",
    "src/hiview_remote_service.cpp",
    "src/hiview_service_ability_proxy.cpp",
    "src/hiview_service_cpu_delegate.cpp",
    "src/hiview_service_memory_delegate.cpp",
    "src/hiview_service_trace_delegate.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_acl",
  ]

  part_name = "hiview"

  subsystem_name = "hiviewdfx"
}

ohos_source_set("hiview_service_impl_for_js") {
  public_configs = [ ":hiview_service_ability_config" ]

  include_dirs = [
    "$hiview_base/include",
    "include",
    "$hiview_interfaces/inner_api/unified_collection",
  ]

  sources = [
    "src/hiview_file_info.cpp",
    "src/hiview_service_ability_proxy.cpp",
    "src/hiview_service_agent.cpp",
  ]

  deps = [ "$hiview_base:hiviewbase" ]

  external_deps = [
    "ability_runtime:app_context",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_acl",
  ]

  part_name = "hiview"

  subsystem_name = "hiviewdfx"
}

group("unittest") {
  testonly = true
  deps = [ "test:unittest" ]
}

group("fuzztest") {
  testonly = true
  deps = [
    "test/fuzztest/hiviewlogconfigmanager_fuzzer:HiviewLogConfigManagerFuzzTest",
    "test/fuzztest/hiviewserviceabilitystub_fuzzer:HiviewServiceAbilityStubFuzzTest",
  ]
}
