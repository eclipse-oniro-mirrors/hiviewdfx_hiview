{
  global:
    extern "C++" {
        "OHOS::HiviewDFX::EventDispatchQueue::Stop()";
        "OHOS::HiviewDFX::EventLoop::StopLoop()";
        "OHOS::HiviewDFX::HiviewGlobal::ReleaseInstance()";
        "OHOS::HiviewDFX::EventDispatchQueue::~EventDispatchQueue()";
        "OHOS::HiviewDFX::HiviewGlobal::CreateInstance(OHOS::HiviewDFX::HiviewContext&)";
        "OHOS::HiviewDFX::Audit::Init(bool)";
        "OHOS::HiviewDFX::EventDispatchQueue::EventDispatchQueue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::Event::ManageType, OHOS::HiviewDFX::HiviewContext*)";
        "OHOS::HiviewDFX::EventDispatchQueue::Start()";
        "OHOS::HiviewDFX::EventLoop::StartLoop(bool)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()> const&, unsigned long long, bool)";
        "OHOS::HiviewDFX::Plugin::GetWorkLoop()";
        "OHOS::HiviewDFX::Plugin::GetName()";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()>)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__h::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Plugin::SetName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventSource::AddPipeline(std::__h::shared_ptr<OHOS::HiviewDFX::Pipeline>)";
        "OHOS::HiviewDFX::PluginProxy::LoadPluginIfNeed()";
        "OHOS::HiviewDFX::EventLoop::EventLoop(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventDispatchQueue::Enqueue(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventLoop::AddEventForResult(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginUnload(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Event::SetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Event::GetIntValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&) const";
        "OHOS::HiviewDFX::PluginProxy::DestroyInstanceIfNeed(long long)";
        "OHOS::HiviewDFX::Audit::~Audit()";
        "OHOS::HiviewDFX::Event::ResetTimestamp()";
        "OHOS::HiviewDFX::Plugin::GetVersion()";
        "OHOS::HiviewDFX::AuditLogParser::StartParse()";
        "OHOS::HiviewDFX::AuditLogParser::GetAuditLogTimeScope()";
        "OHOS::HiviewDFX::AuditLogParser::GetPluginSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetThreadSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Pipeline::AppendProcessor(std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::AuditLogParser::GetPipelineSummary(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::totalCount_";
        "OHOS::HiviewDFX::SysEvent::totalSize_";
        "OHOS::HiviewDFX::SysEventCreator::SysEventCreator(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::SysEventCreator::EventType)";
        "OHOS::HiviewDFX::HiviewGlobal::GetInstance()";
        "OHOS::HiviewDFX::HiviewGlobal::PostSyncEventToTarget(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(char const*)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, OHOS::HiviewDFX::SysEventCreator&)";
        "OHOS::HiviewDFX::EventSource::PublishPipelineEvent(std::__h::shared_ptr<OHOS::HiviewDFX::PipelineEvent>)";
        "OHOS::HiviewDFX::Plugin::~Plugin()";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::PluginFactory::RegisterPlugin(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::shared_ptr<OHOS::HiviewDFX::PluginRegistInfo>)";
        "OHOS::HiviewDFX::Plugin::OnEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>&)";
        "OHOS::HiviewDFX::Plugin::OnEventProxy(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::CanProcessEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::IsInterestedPipelineEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::CanProcessMoreEvents()";
        "OHOS::HiviewDFX::Plugin::GetHandlerInfo()";
        "OHOS::HiviewDFX::Plugin::GetPluginInfo()";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::GetEventUintValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::GetEventDoubleValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::GetEventIntArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<long, std::__h::allocator<long>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventIntArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<long long, std::__h::allocator<long long>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventUintArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<unsigned long, std::__h::allocator<unsigned long>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventUintArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<unsigned long long, std::__h::allocator<unsigned long long>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventDoubleArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<double, std::__h::allocator<double>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventStringArrayValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::HiviewDFX::SysEvent::GetPid() const";
        "OHOS::HiviewDFX::Event::SetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::HiviewDFX::Event::GetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&) const";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__h::function<void ()>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned long long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::GetSeq() const";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::LogStoreEx::CreateLogFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::GetUid() const";
        "OHOS::HiviewDFX::SysEvent::GetTid() const";
        "OHOS::HiviewDFX::SysEvent::GetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Plugin::SetVersion(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::LogStoreEx::SetMaxSize(unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::SetMinKeepingFileNumber(unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::Init()";
        "OHOS::HiviewDFX::EventLoop::AddFileDescriptorEventCallback(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::shared_ptr<OHOS::HiviewDFX::FileDescriptorEventCallback>)";
        "OHOS::HiviewDFX::EventThreadPool::EventThreadPool(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventThreadPool::~EventThreadPool()";
        "OHOS::HiviewDFX::EventThreadPool::Start()";
        "OHOS::HiviewDFX::EventThreadPool::Stop()";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long long)";
        "OHOS::HiviewDFX::PipelineEvent::SetPipelineInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::list<std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>, std::__h::allocator<std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>>>&)";
        "OHOS::HiviewDFX::LogStoreEx::LogStoreEx(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventSource::StartEventSource()";
        "OHOS::HiviewDFX::HiviewGlobal::GetHiViewDirectory(OHOS::HiviewDFX::HiviewContext::DirectoryType) const";
        "OHOS::HiviewDFX::LoggerEvent::GetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::ParamValue::GetString() const";
        "OHOS::HiviewDFX::LoggerEvent::ToJsonString()";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::vector<unsigned int, std::__h::allocator<unsigned int>> const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned int)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned long long)";
        "OHOS::HiviewDFX::ParamValue::GetUint64() const";
        "OHOS::HiviewDFX::ParamValue::GetUint32() const";
        "OHOS::HiviewDFX::ParamValue::ParamValue()";
        "OHOS::HiviewDFX::LoggerEvent::InnerUpdate(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::ParamValue const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginStats()";
        "OHOS::HiviewDFX::HiviewEventCacher::GetPluginStatsEvents(std::__h::vector<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__h::allocator<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>>>&)";
        "OHOS::HiviewDFX::SysEvent::SetSeq(long long)";
        "OHOS::HiviewDFX::HiviewGlobal::PostUnorderedEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::AddPluginStatsEvent(std::__h::vector<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__h::allocator<std::__h::shared_ptr<OHOS::HiviewDFX::LoggerEvent>>> const&)";
        "OHOS::HiviewDFX::SysEvent::~SysEvent()";
        "OHOS::HiviewDFX::SysEvent::GetEventSeq() const";
        "OHOS::HiviewDFX::LogStoreEx::SetLogFileComparator(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&, OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::LogStoreEx::ClearSameLogFilesIfNeeded(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&)>, unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::GetLogFiles(std::__h::function<bool (OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::Event::GetKeyValuePairs()";
        "OHOS::HiviewDFX::Event::GetKeyValuePairs() const";
        "OHOS::HiviewDFX::Logger::GetInstance()";
        "OHOS::HiviewDFX::Logger::Print(unsigned int, unsigned int, char const*, char const*, ...)";
        "OHOS::HiviewDFX::PluginProxy::DestroyInstanceIfNeed(long)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__h::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__h::shared_ptr<OHOS::HiviewDFX::Event>, std::__h::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__h::function<void ()>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long)";
        "OHOS::HiviewDFX::SysEvent::SetSeq(long)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(unsigned long)";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::HiviewDFX::FileUtil::PathToRealPath(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const& ... )";
        "OHOS::HiviewDFX::SysEvent::GetEventIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::GetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::PluginFactory::RegisterPlugin(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<OHOS::HiviewDFX::PluginRegistInfo>)";
        "OHOS::HiviewDFX::Plugin::OnEventProxy(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Plugin::IsInterestedPipelineEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&, bool, bool)";
        "OHOS::HiviewDFX::FileUtil::ExtractFilePath(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::RemoveFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::IsLegalPath(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::ForceRemoveDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::FileUtil::FileExists(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::ForceCreateDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::ChangeMode(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int const&)";
        "OHOS::HiviewDFX::StringUtil::ReplaceStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::GetDirFiles(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&, bool)";
        "OHOS::HiviewDFX::FileUtil::GetFileSize(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::ForceCreateDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::FileUtil::ExtractFileName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::RenameFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::IsDirectory(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::GetFolderSize(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()>)";
        "OHOS::HiviewDFX::EventLoop::AddTimerEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()> const&, unsigned long, bool)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__1::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::Plugin::SetName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginLoad(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::EventSource::AddPipeline(std::__1::shared_ptr<OHOS::HiviewDFX::Pipeline>)";
        "OHOS::HiviewDFX::PluginFactory::GetGlobalPluginInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::Plugin::BindWorkLoop(std::__1::shared_ptr<OHOS::HiviewDFX::EventLoop>)";
        "OHOS::HiviewDFX::EventLoop::EventLoop(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventDispatchQueue::EventDispatchQueue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, OHOS::HiviewDFX::Event::ManageType, OHOS::HiviewDFX::HiviewContext*)";
        "OHOS::HiviewDFX::EventDispatchQueue::Enqueue(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventLoop::AddEventForResult(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::EventLoop::AddEvent(std::__1::shared_ptr<OHOS::HiviewDFX::EventHandler>, std::__1::shared_ptr<OHOS::HiviewDFX::Event>, std::__1::function<void ()>)";
        "OHOS::HiviewDFX::HiviewEventReport::ReportPluginUnload(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::PluginFactory::UnregisterPlugin(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::Event::SetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::Event::GetIntValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const";
        "OHOS::HiviewDFX::Pipeline::AppendProcessor(std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::EventLoop::~EventLoop()";
        "OHOS::HiviewDFX::AuditLogParser::GetPluginSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetThreadSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::AuditLogParser::GetPipelineSummary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEventCreator::SysEventCreator(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, OHOS::HiviewDFX::SysEventCreator::EventType)";
        "OHOS::HiviewDFX::HiviewGlobal::PostSyncEventToTarget(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeStringValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, OHOS::HiviewDFX::SysEventCreator&)";
        "OHOS::HiviewDFX::EventSource::PublishPipelineEvent(std::__1::shared_ptr<OHOS::HiviewDFX::PipelineEvent>)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::Plugin::OnEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>&)";
        "OHOS::HiviewDFX::Plugin::CanProcessEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::Event::SetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int)";
        "OHOS::HiviewDFX::Event::GetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const";
        "OHOS::HiviewDFX::EventThreadPool::AddTask(std::__1::function<void ()>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, unsigned long, unsigned char)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::LogStoreEx::CreateLogFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::Plugin::SetVersion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventLoop::AddFileDescriptorEventCallback(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<OHOS::HiviewDFX::FileDescriptorEventCallback>)";
        "OHOS::HiviewDFX::EventThreadPool::EventThreadPool(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SetEventValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long)";
        "OHOS::HiviewDFX::PipelineEvent::SetPipelineInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::list<std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>, std::__1::allocator<std::__1::weak_ptr<OHOS::HiviewDFX::Plugin>>>&)";
        "OHOS::HiviewDFX::LogStoreEx::LogStoreEx(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::LoggerEvent::GetValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::vector<unsigned int, std::__1::allocator<unsigned int>> const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)";
        "OHOS::HiviewDFX::ParamValue::ParamValue(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::LoggerEvent::InnerUpdate(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, OHOS::HiviewDFX::ParamValue const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::AddPluginStatsEvent(std::__1::vector<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__1::allocator<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>>> const&)";
        "OHOS::HiviewDFX::HiviewEventCacher::GetPluginStatsEvents(std::__1::vector<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>, std::__1::allocator<std::__1::shared_ptr<OHOS::HiviewDFX::LoggerEvent>>>&)";
        "OHOS::HiviewDFX::HiviewGlobal::PostUnorderedEvent(std::__1::shared_ptr<OHOS::HiviewDFX::Event>)";
        "OHOS::HiviewDFX::LogStoreEx::SetLogFileComparator(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&, OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::LogStoreEx::ClearSameLogFilesIfNeeded(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&)>, unsigned int)";
        "OHOS::HiviewDFX::LogStoreEx::GetLogFiles(std::__1::function<bool (OHOS::HiviewDFX::LogFile const&)>)";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>& ... )";
        "OHOS::HiviewDFX::FileUtil::FormatPath2UnixStyle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&)";
        "OHOS::HiviewDFX::FileUtil::PathToRealPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_t ... )";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, bool, bool)";
        "OHOS::HiviewDFX::StringUtil::ReplaceStr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::MemoryUtil::DisableThreadCache()";
        "OHOS::HiviewDFX::MemoryUtil::DisableDelayFree()";
        "OHOS::HiviewDFX::Pipeline::RemoveProcessor(std::__h::weak_ptr<OHOS::HiviewDFX::Plugin>)";
        "OHOS::HiviewDFX::StringUtil::StrToInt(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int&)";
        "OHOS::HiviewDFX::StringUtil::TrimStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, char)";
        "OHOS::HiviewDFX::StringUtil::SplitStr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, char)";
        "OHOS::HiviewDFX::StringUtil::EraseString(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::VectorToString(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetLeftSubstr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRightSubstr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRleftSubstr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRrightSubstr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetMidSubstr(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetLeftSubstr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRightSubstr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRleftSubstr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetRrightSubstr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::GetMidSubstr(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::ConvertVectorToStr(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TimeUtil::GetNanoTime()";
        "OHOS::HiviewDFX::HiviewRuleParser::HiviewRuleParser(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::HiviewRuleParser::getRule()";
        "OHOS::HiviewDFX::DispatchRule::FindEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Pipeline::ProcessEvent(std::__h::shared_ptr<OHOS::HiviewDFX::PipelineEvent>)";
        "OHOS::HiviewDFX::DomainRule::FindEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&) const";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int, std::__h::set<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::less<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::map<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::HiviewDFX::DomainRule, std::__h::less<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::pair<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const, OHOS::HiviewDFX::DomainRule>>> const&)";
        "OHOS::HiviewDFX::Plugin::AddDispatchInfo(std::__h::unordered_set<unsigned char, std::__h::hash<unsigned char>, std::__h::equal_to<unsigned char>, std::__h::allocator<unsigned char>> const&, std::__h::unordered_set<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::hash<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::equal_to<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::unordered_set<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::hash<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::equal_to<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, std::__h::unordered_map<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::HiviewDFX::DomainRule, std::__h::hash<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::equal_to<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::pair<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const, OHOS::HiviewDFX::DomainRule>>> const&)";
        "OHOS::HiviewDFX::EventListener::AddListenerInfo(unsigned int)";
        vtable?for?OHOS::HiviewDFX::PluginProxy;
        vtable?for?OHOS::HiviewDFX::Audit;
        vtable?for?OHOS::HiviewDFX::EventSource;
        vtable?for?OHOS::HiviewDFX::SysEvent;
        vtable?for?OHOS::HiviewDFX::PipelineEvent;
        vtable?for?OHOS::HiviewDFX::PipelineEvent;
        vtable?for?OHOS::HiviewDFX::PluginStatsEventFactory;
        vtable?for?OHOS::HiviewDFX::LoggerEvent;
        vtable?for?OHOS::HiviewDFX::Plugin;
        "OHOS::HiviewDFX::SysEvent::AsJsonStr()";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::RawData>)";
        "OHOS::HiviewDFX::SysEvent::GetEventType() const";
        "OHOS::HiviewDFX::SysEvent::SetId(unsigned long)";
        "OHOS::HiviewDFX::SysEvent::SetId(unsigned long long)";
        "OHOS::HiviewDFX::SysEvent::UnescapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::EscapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEventCreator::EscapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SetLevel(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SetTag(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SetEventSeq(long long)";
        "OHOS::HiviewDFX::SysEvent::SetEventSeq(long)";
        "OHOS::HiviewDFX::SysEvent::GetTag() const";
        "OHOS::HiviewDFX::SysEvent::GetLevel() const";
        "OHOS::HiviewDFX::SysEvent::AsRawData()";
        "OHOS::HiviewDFX::EventStore::EventCol::DOMAIN";
        "OHOS::HiviewDFX::EventStore::EventCol::NAME";
        "OHOS::HiviewDFX::EventStore::EventCol::TYPE";
        "OHOS::HiviewDFX::EventStore::EventCol::TZ";
        "OHOS::HiviewDFX::EventStore::EventCol::TS";
        "OHOS::HiviewDFX::EventStore::EventCol::TID";
        "OHOS::HiviewDFX::EventStore::EventCol::PID";
        "OHOS::HiviewDFX::EventStore::EventCol::UID";
        "OHOS::HiviewDFX::EventStore::EventCol::INFO";
        "OHOS::HiviewDFX::EventStore::EventCol::LEVEL";
        "OHOS::HiviewDFX::EventStore::EventCol::SEQ";
        "OHOS::HiviewDFX::EventStore::EventCol::TAG";
        "OHOS::HiviewDFX::TimeUtil::Get0ClockStampMs()";
        "OHOS::HiviewDFX::TimeUtil::TimestampFormatToDate(long, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TimeUtil::TimestampFormatToDate(long long, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TimeUtil::GetMilliseconds()";
        "OHOS::HiviewDFX::Parameter::GetString(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Parameter::GetInteger(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long)";
        "OHOS::HiviewDFX::Parameter::GetBoolean(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::Parameter::SetProperty(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Parameter::WaitParamSync(char const*, char const*, int)";
        "OHOS::HiviewDFX::Parameter::WatchParamChange(char const*, void (*)(char const*, char const*, void*), void*)";
        "OHOS::HiviewDFX::EventLoop::RemoveEvent(unsigned long)";
        "OHOS::HiviewDFX::EventLoop::RemoveEvent(unsigned long long)";
        "OHOS::HiviewDFX::SqlUtil::GenerateCreateSql(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::pair<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>, std::__h::allocator<std::__h::pair<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>> const&)";
        "OHOS::DelayedRefSingleton<OHOS::HiviewDFX::HiviewEventCacher>::mutex_";
        "OHOS::DelayedRefSingleton<OHOS::HiviewDFX::HiviewEventCacher>::instance_";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsUint64(unsigned long&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsInt64(long&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsDouble(double&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsUint64Vec(std::__h::vector<unsigned long, std::__h::allocator<unsigned long>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsInt64Vec(std::__h::vector<long, std::__h::allocator<long>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsDoubleVec(std::__h::vector<double, std::__h::allocator<double>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsStringVec(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::GetKey()";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::GetRawData()";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::Encode()";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::EncodeKey()";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::GetValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::IsBaseInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendValue(std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::EncodedParam>)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendId(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTraceId(unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendSpanId(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendPSpanId(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendDomain(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTimeZone(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::EncodedParam(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::~EncodedParam()";
        "OHOS::HiviewDFX::EventRaw::RawDataEncoder::ValueTypeEncoded(OHOS::HiviewDFX::EventRaw::RawData&, bool, OHOS::HiviewDFX::EventRaw::ValueType, unsigned char)";
        "OHOS::HiviewDFX::EventRaw::RawDataEncoder::StringValueEncoded(OHOS::HiviewDFX::EventRaw::RawData&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::GetLastLine(std::__h::basic_istream<char, std::__h::char_traits<char>>&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&, unsigned int)";
        "OHOS::HiviewDFX::TimeUtil::StrToTimeStamp(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::StrToInt(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::CopyFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::ExtractFileName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::LoadStringFromFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::HiviewDFX::EventPublish::PushEvent(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::HiSysEvent::EventType, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::SaveStringToFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::SqlUtil::GenerateDropSql(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventStore::Cond::And(OHOS::HiviewDFX::EventStore::Cond const&)";
        "OHOS::HiviewDFX::CommonUtils::GetProcNameByPid(int)";
        "OHOS::HiviewDFX::EventStore::ResultSet::~ResultSet()";
        "OHOS::HiviewDFX::EventStore::ResultSet::HasNext() const";
        "OHOS::HiviewDFX::EventStore::ResultSet::Next()";
        "OHOS::HiviewDFX::EventStore::SysEventQuery::And(OHOS::HiviewDFX::EventStore::Cond const&)";
        "OHOS::HiviewDFX::EventStore::SysEventDao::BuildQuery(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, unsigned int, long long, long long)";
        "OHOS::HiviewDFX::EventStore::SysEventQuery::Where(OHOS::HiviewDFX::EventStore::Cond const&)";
        "OHOS::HiviewDFX::EventStore::SysEventQuery::Order(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool)";
        "OHOS::HiviewDFX::RunningStatusLogger::FormatTimeStamp(bool)";
        "OHOS::HiviewDFX::RunningStatusLogger::Log(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventThreshold::EventThresholdManager::GetInstance()";
        "OHOS::HiviewDFX::EventThreshold::EventThresholdManager::GetDefaultQueryRuleLimit()";
        "OHOS::HiviewDFX::EventThreshold::EventThresholdManager::GetQueryRuleLimit(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::EventThreshold::ProcessType)";
        "OHOS::HiviewDFX::EventStore::SysEventDao::BuildQuery(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, unsigned int, long, long)";
        "OHOS::HiviewDFX::EventStore::SysEventDao::BuildQuery(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&)";
        "OHOS::HiviewDFX::EventStore::SysEventQuery::Select(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&)";
        "OHOS::HiviewDFX::AppEventPublisherFactory::RegisterPublisher(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::AppEventPublisherFactory::UnregisterPublisher(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::AppEventPublisherFactory::IsPublisher(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::AppEventHandler::PostEvent(OHOS::HiviewDFX::AppEventHandler::AppLaunchInfo const&)";
        "OHOS::DelayedRefSingleton<OHOS::HiviewDFX::EventPublish>::instance_";
        "OHOS::HiviewDFX::AppEventHandler::PostEvent(OHOS::HiviewDFX::AppEventHandler::ScrollJankInfo const&)";
        "OHOS::HiviewDFX::AppEventHandler::PostEvent(OHOS::HiviewDFX::AppEventHandler::CpuUsageHighInfo const&)";
        "OHOS::HiviewDFX::AppEventHandler::PostEvent(OHOS::HiviewDFX::AppEventHandler::BatteryUsageInfo const&)";
        "OHOS::HiviewDFX::AppEventHandler::PostEvent(OHOS::HiviewDFX::AppEventHandler::ResourceOverLimitInfo const&)";
        "OHOS::HiviewDFX::CommonUtils::GetProcFullNameByPid(int)";
        "OHOS::HiviewDFX::Plugin::DelayProcessEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>, unsigned long)";
        "OHOS::HiviewDFX::Plugin::DelayProcessEvent(std::__h::shared_ptr<OHOS::HiviewDFX::Event>, unsigned long long)";
        "OHOS::HiviewDFX::AppCallerEvent::AppCallerEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::AppCallerEvent::isDynamicTraceOpen_";
        "OHOS::HiviewDFX::AppCallerEvent::enableDynamicTrace_";
        "OHOS::HiviewDFX::AppCallerEvent::IsEnableAppCaptureTrace()";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::RawData>, long)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::RawData>, long long)";
        "OHOS::HiviewDFX::SysEvent::InitBuilder()";
        "OHOS::HiviewDFX::Parameter::IsBetaVersion()";
        "OHOS::HiviewDFX::Parameter::GetDisplayVersionStr()";
        "OHOS::HiviewDFX::SysEvent::GetSysVersion()";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::RawData>, long long, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::RawDataEncoder::EncodedTag(unsigned char)";
        "OHOS::HiviewDFX::EventRaw::RawData::Append(unsigned char*, unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendType(int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendId(unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendPid(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTid(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendUid(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendLog(unsigned char)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTraceFlag(unsigned char)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTimeStamp(unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawData::GetData() const";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::DecodedEvent(unsigned char*)";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::IsValid()";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::AsJsonStr()";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::~DecodedEvent()";
        "OHOS::HiviewDFX::EventStore::ResultSet::GetErrCode() const";
        "OHOS::HiviewDFX::FreezeJsonUtil::IsAppFreeze(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::GetFd(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::UnescapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::WrapByParenthesis(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::FormatCmdLine(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TimeUtil::GetTimeZone()";
        "OHOS::HiviewDFX::CommonUtils::IsSpecificCmdExist(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::CommonUtils::GetPidByName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::SysEvent::SysEvent(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::PipelineEventProducer*, std::__h::shared_ptr<OHOS::HiviewDFX::EventRaw::RawData>, long, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsUint64(unsigned long long&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsUint64Vec(std::__h::vector<unsigned long long, std::__h::allocator<unsigned long long>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsInt64Vec(std::__h::vector<long long, std::__h::allocator<long long>>&)";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsInt64(long long&)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTraceId(unsigned long long)";
        "OHOS::HiviewDFX::EventRaw::RawData::Append(unsigned char*, unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendId(unsigned long long)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTimeStamp(unsigned long long)";
        "OHOS::HiviewDFX::FileUtil::GetFirstLine(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::StringToUl(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int)";
        "OHOS::HiviewDFX::FileUtil::IncludeTrailingPathDelimiter(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::CreateFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int)";
        "OHOS::HiviewDFX::TimeUtil::Sleep(unsigned int)";
        "OHOS::HiviewDFX::TimeUtil::GetBootTimeMs()";
        "OHOS::HiviewDFX::CommonUtils::IsPidExist(int)";
        "OHOS::HiviewDFX::Parameter::IsUCollectionSwitchOn()";
        "OHOS::HiviewDFX::SqlUtil::GenerateExistSql(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::CommonUtils::WriteCommandResultToFile(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&)";
        "OHOS::HiviewDFX::TimeUtil::GenerateTimestamp()";
        "OHOS::HiviewDFX::TimeUtil::GetSteadyClockTimeMs()";
        "OHOS::HiviewDFX::StringUtil::StringToDouble(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::LoadLinesFromFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::HiviewDFX::StringUtil::EscapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::StringUtil::UnescapeJsonStringValue(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FileUtil::SaveStringToFd(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TimeUtil::GetTimeZone()";
        "OHOS::HiviewDFX::FreezeJsonUtil::GetFilePath(long, long, unsigned long long)";
        "OHOS::HiviewDFX::FreezeJsonUtil::LoadCollectorFromFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::HiviewDFX::FreezeJsonUtil::FreezeJsonCollector&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::DelFile(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::WrapBySquareBracket(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::HasBeenWrapped(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::WrapByBrace(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::FreezeJsonUtil::MergeKeyValueList(std::__h::list<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::HiviewDFX::FileUtil::LoadStringFromFd(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::AsJsonStr()";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::DecodedEvent(unsigned char*)";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::GetRawData()";
        "OHOS::HiviewDFX::EventRaw::DecodedEvent::~DecodedEvent()";
        "OHOS::HiviewDFX::EventRaw::EncodedParam::AsString(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::HiviewDFX::EventRaw::GetValidDataMinimumByteCount()";
        "OHOS::HiviewDFX::EventRaw::RawData::GetData() const";
        "OHOS::HiviewDFX::EventRaw::RawData::GetDataLength() const";
        "OHOS::HiviewDFX::EventRaw::RawData::RawData(unsigned char*, unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawData::~RawData()";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendLog(unsigned char)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendTimeStamp(unsigned long)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendType(int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::AppendUid(unsigned int)";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::Build()";
        "OHOS::HiviewDFX::EventRaw::RawDataBuilder::EncodedTag(unsigned char)";
        "OHOS::HiviewDFX::EventStore::SysEventDao::CheckRepeat(std::__h::shared_ptr<OHOS::HiviewDFX::SysEvent>)";
        "OHOS::HiviewDFX::EventStore::SysEventDao::Clear()";
        "OHOS::HiviewDFX::EventStore::SysEventDao::Insert(std::__h::shared_ptr<OHOS::HiviewDFX::SysEvent>)";
        "OHOS::HiviewDFX::FileUtil::ExtractFileExt(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::LoadModule(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::Parameter::IsDeveloperMode()";
        "OHOS::HiviewDFX::Parameter::IsTraceCollectionSwitchOn()";
        "OHOS::HiviewDFX::StringUtil::HideSnInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::TraceFlowController::CleanAppTrace()";
        "OHOS::HiviewDFX::TraceFlowController::HasCallOnceToday(int, unsigned long)";
        "OHOS::HiviewDFX::TraceFlowController::TraceFlowController()";
        "OHOS::HiviewDFX::UCollectUtil::ProcessStatus::NotifyProcessState(int, OHOS::HiviewDFX::UCollectUtil::ProcessState, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::HiviewDFX::UnloadModule(void*)";
        "OHOS::HiviewDFX::FileUtil::CreateDirWithDefaultPerm(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int, unsigned int)";
        "OHOS::HiviewDFX::AshMemoryUtils::GetAshmem(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, unsigned int)";
    };
  local:
    *;
};
