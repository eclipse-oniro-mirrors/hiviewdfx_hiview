diff --git a/plugins/crash_validator/BUILD.gn b/plugins/crash_validator/BUILD.gn
index 613eb93266136c955a70e1cb406fe2e766bd1f9f..310bdf724f079a7622c65b3ad29afc75dafcf68f 100644
--- a/plugins/crash_validator/BUILD.gn
+++ b/plugins/crash_validator/BUILD.gn
@@ -47,6 +47,7 @@ ohos_shared_library("libcrashvalidator") {
   deps = [
     ":crashvalidator_plugin_config",
     "$hiview_base:hiviewbase",
+    "$hiview_plugin/faultlogger:libfaultlogger",
   ]
 
   external_deps = [
diff --git a/plugins/crash_validator/crash_validator.cpp b/plugins/crash_validator/crash_validator.cpp
index 586d5c948e08895cfa2e95381e31a3e64c7ba758..d1cd846592cea3110769f9ee3ac2bc30d3a3e504 100644
--- a/plugins/crash_validator/crash_validator.cpp
+++ b/plugins/crash_validator/crash_validator.cpp
@@ -20,9 +20,11 @@
 #include <memory>
 #include <set>
 
+#include "faultlogger_client.h"
 #include "hisysevent.h"
 #include "hiview_logger.h"
 #include "plugin_factory.h"
+#include "string_util.h"
 #include "time_util.h"
 
 namespace OHOS {
@@ -187,6 +189,22 @@ bool CrashValidator::OnEvent(std::shared_ptr<Event>& event)
     }
 
     int32_t pid = sysEvent->GetEventIntValue("PID");
+    if (sysEvent->eventName_ == "CPP_CRASH_EXCEPTION" && sysEvent->GetEventIntValue("ERROR_CODE") == 206) { // error code
+        FaultLogInfoInner info;
+        info.time = sysEvent->GetEventUintValue("HAPPEN_TIME");
+        info.id = sysEvent->GetUid();
+        info.pid = sysEvent->GetPid();
+        info.faultLogType = CPP_CRASH;
+        info.module = StringUtil::UnescapeJsonStringValue(sysEvent->GetEventValue("PROCESS_NAME"));
+        auto msg = StringUtil::UnescapeJsonStringValue(sysEvent->GetEventValue("ERROR_MSG"));
+        auto pos = msg.find_first_of("\n");
+        if (pos < msg.size() - 1) {
+            info.reason = msg.substr(0, pos - 1);
+            msg = msg.substr(pos + 1);
+        }
+        info.summary = msg;
+        AddFaultLog(info);
+    }
     AddEventToMap(pid, sysEvent);
     if (sysEvent->eventName_ == "PROCESS_EXIT") {
         workLoop_->AddTimerEvent(nullptr, nullptr, [this, pid] {
