# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/hiview/hiview.gni")
import("//build/config/components/idl_tool/idl.gni")

idl_gen_interface("faultlog_ext_interface") {
  src_idl = rebase_path("IFaultLogExt.idl")
  log_domainid = "0xD002D11"
  log_tag = "HiView-FaultLogExt"
}

config("faultlog_ext_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
  ]
}

ohos_source_set("faultlog_extservice_zidl_stub") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  public_configs = [ ":faultlog_ext_public_config" ]
  output_values = get_target_outputs(":faultlog_ext_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  deps = [
    ":faultlog_ext_interface",
    "$hiview_base:hiviewbase",
  ]
  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
  ]
  part_name = "hiview"
  subsystem_name = "hiviewdfx"
}

ohos_source_set("faultlog_ext_zidl_proxy_for_test") {
  public_configs = [ ":faultlog_ext_public_config" ]
  output_values = get_target_outputs(":faultlog_ext_interface")
  sources = filter_include(output_values, [ "*_proxy.cpp" ])
  deps = [
    ":faultlog_ext_interface",
    "$hiview_base:hiviewbase",
  ]
  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
  ]
  part_name = "hiview"
  subsystem_name = "hiviewdfx"
}

ohos_source_set("faultlog_ext_zidl_proxy") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  public_configs = [ ":faultlog_ext_public_config" ]
  output_values = get_target_outputs(":faultlog_ext_interface")
  sources = filter_include(output_values, [ "*_proxy.cpp" ])
  deps = [
    ":faultlog_ext_interface",
    "$hiview_base:hiviewbase",
  ]
  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_napi",
  ]
  part_name = "hiview"
  subsystem_name = "hiviewdfx"
}
