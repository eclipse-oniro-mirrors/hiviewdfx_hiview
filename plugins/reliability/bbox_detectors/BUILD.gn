# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//base/hiviewdfx/hiview/hiview.gni")
import("//build/ohos.gni")

config("bbox_detector_config") {
  visibility = [ ":*" ]
  include_dirs = [
    ".",
    "include",
    "$hiview_root/utility/smart_parser",
    "$hiview_root/utility/common_utils/include",
  ]
}

ohos_source_set("bbox_detector") {
  part_name = "hiview"
  subsystem_name = "hiviewdfx"
  sources = [
    "bbox_detector_plugin.cpp",
    "hisysevent_util.cpp",
    "panic_report_recovery.cpp",
  ]

  configs = [ ":bbox_detector_config" ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "libxml2:libxml2",
    "zlib:shared_libz",
  ]

  deps = [
    "$hiview_base:hiviewbase",
    "config:config",
  ]
}

ohos_source_set("bbox_detector_with_cfi") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }
  part_name = "hiview"
  subsystem_name = "hiviewdfx"
  sources = [
    "bbox_detector_plugin.cpp",
    "hisysevent_util.cpp",
    "panic_report_recovery.cpp",
  ]

  configs = [ ":bbox_detector_config" ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "libxml2:libxml2",
    "zlib:shared_libz",
  ]

  deps = [
    "$hiview_base:hiviewbase",
    "config:config",
  ]
}

group("unittest") {
  testonly = true
  deps = [ "test:BBoxDetectorUnitTest" ]
}

group("moduletest") {
  testonly = true
  deps = [ "test:BBoxDetectorModuleTest" ]
}
