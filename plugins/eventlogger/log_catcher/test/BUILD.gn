# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//base/hiviewdfx/hiview/build/hiview_var.gni")
import("//base/hiviewdfx/hiview/hiview.gni")
import("//build/test.gni")

module_output_path = "hiview/hiview_freeze_plugin/eventlogger/logCatcher"

config("unittest_config") {
  include_dirs = [
    "../include",
    "../../test/util",
    "unittest/common",
  ]

  cflags_cc = [
    "-D__UNITTEST__",
    "-D__HIVIEW_OHOS__",
  ]
}

ohos_unittest("EventloggerCatcherTest") {
  module_out_path = module_output_path
  configs = [ ":unittest_config" ]

  include_dirs = [
    "include",
    "$hiview_eventlogger/include",
  ]

  sources = [
    "../../test/util/eventlogger_util_test.cpp",
    "unittest/common/event_logger_catcher_test.cpp",
  ]

  deps = [
    "$hiview_adapter/plugins/eventlogger/log_catcher:eventlogger_adapter_logcatcher",
    "$hiview_base:hiviewbase_static_lib_for_tdd",
    "$hiview_eventlogger:eventlogger",
    "$hiview_eventlogger/config:eventlogger_config",
  ]

  external_deps = [
    "ffrt:libffrt",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "input:libmmi-client",
    "libxml2:libxml2",
    "window_manager:libwm",
  ]
  if (has_hiperf) {
    cflags = [ "-DHAS_HIPERF" ]
  }

  defines = []

  if (hiview_eventlogger_stacktrace_catcher_enable) {
    defines += [ "STACKTRACE_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_binder_catcher_enable) {
    defines += [ "BINDER_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_dmesg_catcher_enable) {
    defines += [ "DMESG_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_hilog_catcher_enable) {
    defines += [ "HILOG_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_hitrace_catcher_enable) {
    defines += [ "HITRACE_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_usage_catcher_enable) {
    defines += [ "USAGE_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_scb_catcher_enable) {
    defines += [ "SCB_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_other_catcher_enable) {
    defines += [ "OTHER_CATCHER_ENABLE" ]
  }

  if (hiview_eventlogger_kernel_catcher_enable) {
    defines += [ "KERNELSTACK_CATCHER_ENABLE" ]
    external_deps += [ "faultloggerd:libbacktrace_local" ]
  }
}
