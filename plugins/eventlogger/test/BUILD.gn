# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//base/hiviewdfx/hiview/build/hiview_var.gni")
import("//base/hiviewdfx/hiview/hiview.gni")
import("//build/test.gni")

module_output_path = "hiview/hiview_freeze_plugin/eventlogger"

config("unittest_config") {
  include_dirs = [
    "../include",
    "../log_catcher/include",
    "unittest/common",
    "util",
    "$hiview_plugin/sysevent_source/control/include",
    "$hiview_plugin/sysevent_source/include",
  ]

  cflags_cc = [
    "-D__UNITTEST__",
    "-D__HIVIEW_OHOS__",
  ]
}

ohos_unittest("EventloggerPluginTest") {
  module_out_path = module_output_path
  configs = [ ":unittest_config" ]

  sources = [ "unittest/common/event_logger_plugin_test.cpp" ]

  deps = [
    "$hiview_adapter/plugins/eventservice/service:sys_event_service_adapter",
    "$hiview_base:hiviewbase_static_lib_for_tdd",
    "$hiview_core:hiview_core",
    "$hiview_eventlogger:eventlogger",
    "$hiview_eventlogger/config:eventlogger_config",
    "$hiview_plugin/sysevent_source:sysevent_source",
  ]

  external_deps = [
    "ffrt:libffrt",
    "googletest:gtest_main",
    "hilog:libhilog",
    "jsoncpp:jsoncpp",
    "window_manager:libwm",
  ]

  defines = []
  if (multimodalinput_input_enable) {
    external_deps += [ "input:libmmi-client" ]
    defines += [ "MULTIMODALINPUT_INPUT_ENABLE" ]
  }

  resource_config_file =
      "//base/hiviewdfx/hiview/plugins/eventlogger/test/resource/ohos_test.xml"
}

ohos_unittest("ActiveKeyEventTest") {
  module_out_path = module_output_path
  configs = [ ":unittest_config" ]

  sources = [ "unittest/common/active_key_event_test.cpp" ]

  deps = [
    "$hiview_adapter/plugins/eventservice/service:sys_event_service_adapter",
    "$hiview_base:hiviewbase_static_lib_for_tdd",
    "$hiview_core:hiview_core",
    "$hiview_eventlogger:eventlogger",
    "$hiview_eventlogger/config:eventlogger_config",
    "$hiview_plugin/sysevent_source:sysevent_source",
  ]

  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "jsoncpp:jsoncpp",
  ]

  defines = []
  if (multimodalinput_input_enable) {
    external_deps += [ "input:libmmi-client" ]
    defines += [ "MULTIMODALINPUT_INPUT_ENABLE" ]
  }
}

ohos_unittest("EventLoggerTest") {
  module_out_path = module_output_path
  configs = [ ":unittest_config" ]

  sources = [
    "unittest/common/event_logger_test.cpp",
    "util/eventlogger_util_test.cpp",
  ]
  deps = [
    "$hiview_adapter/plugins/eventservice/service:sys_event_service_adapter",
    "$hiview_base:hiviewbase_static_lib_for_tdd",
    "$hiview_core:hiview_core",
    "$hiview_eventlogger:eventlogger",
    "$hiview_eventlogger/config:eventlogger_config",
    "$hiview_plugin/faultlogger:libfaultlogger",
    "$hiview_plugin/sysevent_source:sysevent_source",
  ]

  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_single",
    "jsoncpp:jsoncpp",
    "libxml2:libxml2",
  ]

  defines = []
  if (window_manager_enable) {
    external_deps += [ "window_manager:libwm" ]
    defines += [ "WINDOW_MANAGER_ENABLE" ]
  }
  if (multimodalinput_input_enable) {
    external_deps += [ "input:libmmi-client" ]
    defines += [ "MULTIMODALINPUT_INPUT_ENABLE" ]
  }
  if (hiview_eventlogger_hitrace_catcher_enable) {
    defines += [ "HITRACE_CATCHER_ENABLE" ]
  }
}
